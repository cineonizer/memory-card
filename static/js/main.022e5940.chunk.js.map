{"version":3,"sources":["components/Nav.js","components/Scoreboard.js","components/Card.js","components/Characters.js","assets/characters/alberto.png","assets/characters/anger.png","assets/characters/arlo.png","assets/characters/boo.png","assets/characters/buzz.png","assets/characters/carl.png","assets/characters/dante.png","assets/characters/dash.png","assets/characters/disgust.png","assets/characters/dory.png","assets/characters/dug.png","assets/characters/elastigirl.png","assets/characters/fear.png","assets/characters/flik.png","assets/characters/forky.png","assets/characters/frozone.png","assets/characters/giulia.png","assets/characters/jack-jack.png","assets/characters/jessie.png","assets/characters/joe.png","assets/characters/joy.png","assets/characters/luca.png","assets/characters/mcqueen.png","assets/characters/merida.png","assets/characters/miguel.png","assets/characters/mike.png","assets/characters/mr. incredible.png","assets/characters/nemo.png","assets/characters/randall.png","assets/characters/remy.png","assets/characters/russell.png","assets/characters/sadness.png","assets/characters/sulley.png","assets/characters/towmater.png","assets/characters/violet.png","assets/characters/wall-e.png","assets/characters/woody.png","components/Helper.js","components/GameOver.js","components/Main.js","App.js","index.js"],"names":["Nav","className","Scoreboard","props","currentScore","bestScore","Card","card","incrementCurrentScore","setGameOver","setLevel","src","url","alt","name","draggable","onClick","isClicked","toUpperCase","characters","alberto","anger","arlo","boo","buzz","carl","dante","dash","disgust","dory","dug","elastigirl","fear","flik","forky","frozone","giulia","jackjack","jessie","joe","joy","luca","mcqueen","merida","miguel","mike","mrIncredible","nemo","randall","remy","russell","sadness","sulley","towmater","violet","wallE","woody","getRandomCard","charactersObj","charactersKeys","Object","keys","Math","floor","random","length","GameOver","handleNewGameClickEvent","Main","useState","level","numOfCards","setNumOfCards","activeDeck","setActiveDeck","discardDeck","setDiscardDeck","gameOver","resetCurrentScore","updateBestScore","useEffect","newDeck","randomCard","includes","push","every","map","prevDiscardDeck","cardsContainer","document","querySelector","numOfColumns","style","gridTemplateColumns","uniqid","App","setCurrentScore","setBestScore","prevScore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.022e5940.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Nav.css';\n\nconst Nav = () => {\n  return (\n    <div className=\"nav-bar\">\n      <div className=\"nav-title\">PIXAR</div>\n      <div className=\"nav-subtitle\">MEMORY GAME</div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport '../css/Scoreboard.css';\n\nconst Scoreboard = (props) => {\n  const { currentScore, bestScore } = props;\n\n  return (\n    <div className=\"scoreboard-container\">\n      <div className=\"scoreboard\">\n        <div className=\"current-score\">\n          <span>CURRENT SCORE:</span>\n          <span>{currentScore}</span>\n        </div>\n        <div className=\"best-score\">\n          <span>BEST SCORE:</span>\n          <span>{bestScore}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React from 'react';\nimport '../css/Card.css'\n\nconst Card = (props) => {\n  const { card, incrementCurrentScore, setGameOver, setLevel } = props;\n\n  const handleClickEvent = () => {\n    // if the card is clicked again then set the game to be over\n    if (card.isClicked) {\n      setGameOver(true)\n      setLevel(0)\n    } else {\n      incrementCurrentScore()\n      card.isClicked = true;\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"image\" src={card.url} alt={card.name} draggable=\"false\" onClick={handleClickEvent}/>\n      <span className=\"name\">{card.name.toUpperCase()}</span>\n    </div>\n  )\n};\n\nexport default Card;\n","import albertoURL from '../assets/characters/alberto.png';\nimport angerURL from '../assets/characters/anger.png';\nimport arloURL from '../assets/characters/arlo.png';\nimport booURL from '../assets/characters/boo.png';\nimport buzzURL from '../assets/characters/buzz.png';\nimport carlURL from '../assets/characters/carl.png';\nimport danteURL from '../assets/characters/dante.png';\nimport dashURL from '../assets/characters/dash.png';\nimport disgustURL from '../assets/characters/disgust.png';\nimport doryURL from '../assets/characters/dory.png';\nimport dugURL from '../assets/characters/dug.png';\nimport elastigirlURL from '../assets/characters/elastigirl.png';\nimport fearURL from '../assets/characters/fear.png';\nimport flikURL from '../assets/characters/flik.png';\nimport forkyURL from '../assets/characters/forky.png';\nimport frozoneURL from '../assets/characters/frozone.png';\nimport giuliaURL from '../assets/characters/giulia.png';\nimport jackjackURL from '../assets/characters/jack-jack.png';\nimport jessieURL from '../assets/characters/jessie.png';\nimport joeURL from '../assets/characters/joe.png';\nimport joyURL from '../assets/characters/joy.png';\nimport lucaURL from '../assets/characters/luca.png';\nimport mcqueenURL from '../assets/characters/mcqueen.png';\nimport meridaURL from '../assets/characters/merida.png';\nimport miguelURL from '../assets/characters/miguel.png';\nimport mikeURL from '../assets/characters/mike.png';\nimport mrIncredibleURL from '../assets/characters/mr. incredible.png';\nimport nemoURL from '../assets/characters/nemo.png';\nimport randallURL from '../assets/characters/randall.png';\nimport remyURL from '../assets/characters/remy.png';\nimport russellURL from '../assets/characters/russell.png';\nimport sadnessURL from '../assets/characters/sadness.png';\nimport sulleyURL from '../assets/characters/sulley.png';\nimport towmaterURL from '../assets/characters/towmater.png';\nimport violetURL from '../assets/characters/violet.png';\nimport wallEURL from '../assets/characters/wall-e.png';\nimport woodyURL from '../assets/characters/woody.png';\n\nconst characters = {\n  alberto: {\n    name: 'Alberto Scorfano',\n    url: albertoURL,\n    isClicked: false,\n  },\n  anger: {\n    name: 'Anger',\n    url: angerURL,\n    isClicked: false,\n  },\n  arlo: {\n    name: 'Arlo',\n    url: arloURL,\n    isClicked: false,\n  },\n  boo: {\n    name: 'Boo',\n    url: booURL,\n    isClicked: false,\n  },\n  buzz: {\n    name: 'Buzz Lightyear',\n    url: buzzURL,\n    isClicked: false,\n  },\n  carl: {\n    name: 'Carl Fredricksen',\n    url: carlURL,\n    isClicked: false,\n  },\n  dante: {\n    name: 'Dante',\n    url: danteURL,\n    isClicked: false,\n  },\n  dash: {\n    name: 'Dash Parr',\n    url: dashURL,\n    isClicked: false,\n  },\n  disgust: {\n    name: 'Disgust',\n    url: disgustURL,\n    isClicked: false,\n  },\n  dory: {\n    name: 'Dory',\n    url: doryURL,\n    isClicked: false,\n  },\n  dug: {\n    name: 'Dug',\n    url: dugURL,\n    isClicked: false,\n  },\n  elastigirl: {\n    name: 'Helen Parr (Elastigirl)',\n    url: elastigirlURL,\n    isClicked: false,\n  },\n  fear: {\n    name: 'Fear',\n    url: fearURL,\n    isClicked: false,\n  },\n  flik: {\n    name: 'Flik',\n    url: flikURL,\n    isClicked: false,\n  },\n  forky: {\n    name: 'Forky',\n    url: forkyURL,\n    isClicked: false,\n  },\n  frozone: {\n    name: 'Frozone',\n    url: frozoneURL,\n    isClicked: false,\n  },\n  giulia: {\n    name: 'Giulia Marcovaldo',\n    url: giuliaURL,\n    isClicked: false,\n  },\n  jackjack: {\n    name: 'Jack-Jack Parr',\n    url: jackjackURL,\n    isClicked: false,\n  },\n  jessie: {\n    name: 'Jessie',\n    url: jessieURL,\n    isClicked: false,\n  },\n  joe: {\n    name: 'Joe Gardner',\n    url: joeURL,\n    isClicked: false,\n  },\n  joy: {\n    name: 'Joy',\n    url: joyURL,\n    isClicked: false,\n  },\n  luca: {\n    name: 'Luca Paguro',\n    url: lucaURL,\n    isClicked: false,\n  },\n  mcqueen: {\n    name: 'Lightning McQueen',\n    url: mcqueenURL,\n    isClicked: false,\n  },\n  merida: {\n    name: 'Princess Merida',\n    url: meridaURL,\n    isClicked: false,\n  },\n  miguel: {\n    name: 'Miguel Rivera',\n    url: miguelURL,\n    isClicked: false,\n  },\n  mike: {\n    name: 'Mike Wazowski',\n    url: mikeURL,\n    isClicked: false,\n  },\n  mrIncredible: {\n    name: 'Bob Parr (Mr. Incredible)',\n    url: mrIncredibleURL,\n    isClicked: false,\n  },\n  nemo: {\n    name: 'Nemo',\n    url: nemoURL,\n    isClicked: false,\n  },\n  randall: {\n    name: 'Randall Boggs',\n    url: randallURL,\n    isClicked: false,\n  },\n  remy: {\n    name: 'Remy',\n    url: remyURL,\n    isClicked: false,\n  },\n  russell: {\n    name: 'Russell',\n    url: russellURL,\n    isClicked: false,\n  },\n  sadness: {\n    name: 'Sadness',\n    url: sadnessURL,\n    isClicked: false,\n  },\n  sulley: {\n    name: 'James P. Sullivan (Sulley)',\n    url: sulleyURL,\n    isClicked: false,\n  },\n  towmater: {\n    name: 'Sir Tow Mater',\n    url: towmaterURL,\n    isClicked: false,\n  },\n  violet: {\n    name: 'Violet Parr',\n    url: violetURL,\n    isClicked: false,\n  },\n  wallE: {\n    name: 'WALL-E',\n    url: wallEURL,\n    isClicked: false,\n  },\n  woody: {\n    name: 'Sheriff Woody',\n    url: woodyURL,\n    isClicked: false,\n  },\n};\n\nexport default characters;\n","export default __webpack_public_path__ + \"static/media/alberto.7f16cf5c.png\";","export default __webpack_public_path__ + \"static/media/anger.4c4a0082.png\";","export default __webpack_public_path__ + \"static/media/arlo.f4fc5783.png\";","export default __webpack_public_path__ + \"static/media/boo.9f9557ed.png\";","export default __webpack_public_path__ + \"static/media/buzz.54b0a71d.png\";","export default __webpack_public_path__ + \"static/media/carl.ef85d877.png\";","export default __webpack_public_path__ + \"static/media/dante.f94fa2c8.png\";","export default __webpack_public_path__ + \"static/media/dash.a50106d9.png\";","export default __webpack_public_path__ + \"static/media/disgust.79cf3dab.png\";","export default __webpack_public_path__ + \"static/media/dory.416413f4.png\";","export default __webpack_public_path__ + \"static/media/dug.9ae89004.png\";","export default __webpack_public_path__ + \"static/media/elastigirl.0334e053.png\";","export default __webpack_public_path__ + \"static/media/fear.e6901a83.png\";","export default __webpack_public_path__ + \"static/media/flik.f29245eb.png\";","export default __webpack_public_path__ + \"static/media/forky.e607082a.png\";","export default __webpack_public_path__ + \"static/media/frozone.37e6a6c9.png\";","export default __webpack_public_path__ + \"static/media/giulia.6f2e74ef.png\";","export default __webpack_public_path__ + \"static/media/jack-jack.c6d13b3f.png\";","export default __webpack_public_path__ + \"static/media/jessie.b037851c.png\";","export default __webpack_public_path__ + \"static/media/joe.3dcab486.png\";","export default __webpack_public_path__ + \"static/media/joy.6f724553.png\";","export default __webpack_public_path__ + \"static/media/luca.b4bcf676.png\";","export default __webpack_public_path__ + \"static/media/mcqueen.a70ef1a1.png\";","export default __webpack_public_path__ + \"static/media/merida.eadd0e2d.png\";","export default __webpack_public_path__ + \"static/media/miguel.d75def88.png\";","export default __webpack_public_path__ + \"static/media/mike.182515da.png\";","export default __webpack_public_path__ + \"static/media/mr. incredible.11e7a9ad.png\";","export default __webpack_public_path__ + \"static/media/nemo.fdea98c3.png\";","export default __webpack_public_path__ + \"static/media/randall.da5689e6.png\";","export default __webpack_public_path__ + \"static/media/remy.8bef1c5f.png\";","export default __webpack_public_path__ + \"static/media/russell.e5046b3c.png\";","export default __webpack_public_path__ + \"static/media/sadness.c17d8f12.png\";","export default __webpack_public_path__ + \"static/media/sulley.543a6bdc.png\";","export default __webpack_public_path__ + \"static/media/towmater.f68739f9.png\";","export default __webpack_public_path__ + \"static/media/violet.9027807f.png\";","export default __webpack_public_path__ + \"static/media/wall-e.f99f86be.png\";","export default __webpack_public_path__ + \"static/media/woody.238b37af.png\";","// a helper method to generate a random character and return its properties (name and url)\nconst getRandomCard = (charactersObj) => {\n  // assign a variable to an array of all the keys from the object of characters\n  const charactersKeys = Object.keys(charactersObj);\n  // the Math.random() method will return a floating point in the range 0 to less than 1\n  // multiply the length of the array (36) to get a floating value between 0 and 36\n  // the Math.floor() method will round the value down to its nearest integer\n  // then access the charactersKeys array with the random index which will return a string of a random character\n  const randomCharacter =\n    charactersKeys[Math.floor(Math.random() * charactersKeys.length)];\n  // access and return the charactersObj object\n  return charactersObj[randomCharacter];\n};\n\nconst resetAllClickedCards = (charactersObj) => {\n  Object.keys(charactersObj).map((card) => charactersObj[card].isClicked = false)\n}\n\nexport { getRandomCard, resetAllClickedCards };\n","import React from 'react';\nimport '../css/GameOver.css';\n\nconst GameOver = (props) => {\n  const { handleNewGameClickEvent } = props;\n\n  return (\n    <div className=\"gameover\">\n      <span className=\"game-over-text\">GAME OVER</span>\n      <button className=\"new-game-button\" onClick={handleNewGameClickEvent} >NEW GAME</button>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport characters from './Characters';\nimport { getRandomCard, resetAllClickedCards } from './Helper';\nimport GameOver from './GameOver';\nimport uniqid from 'uniqid';\nimport '../css/Main.css';\n\nconst Main = (props) => {\n  const [level, setLevel] = useState(1);\n  const [numOfCards, setNumOfCards] = useState(5);\n  const [activeDeck, setActiveDeck] = useState([]);\n  const [discardDeck, setDiscardDeck] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n\n  const {\n    currentScore,\n    incrementCurrentScore,\n    resetCurrentScore,\n    updateBestScore,\n  } = props;\n\n  // effect hook for when the state numOfCards changes: when numOfCards changes, the level changes, so set the activeDeck to new cards\n  useEffect(() => {\n    setActiveDeck(() => {\n      const newDeck = [];\n      while (newDeck.length !== numOfCards) {\n        const randomCard = getRandomCard(characters);\n        // if the array does not contain a duplicate character and the character was not discarded (already used) then push the character into the array\n        if (\n          !newDeck.includes(randomCard) &&\n          !discardDeck.includes(randomCard)\n        ) {\n          newDeck.push(randomCard);\n        }\n      }\n      return newDeck;\n    });\n  }, [numOfCards]);\n\n  // effect hook for when the currentScore prop changes: shuffle the deck and rerender\n  useEffect(() => {\n    // if currentScore is greater than 0 and every card in the activeDeck is clicked then discard those cards\n    if (currentScore && activeDeck.every((card) => card.isClicked)) {\n      activeDeck.map((card) =>\n        setDiscardDeck((prevDiscardDeck) => [...prevDiscardDeck, card])\n      );\n      setLevel(level + 1);\n    }\n    if (currentScore === Object.keys(characters).length) {\n      setGameOver(true);\n      setLevel(0);\n    }\n    // a method that randomizes the elements in the activeDeck array by reassigning the index (i) with a random index (j)\n    // setActiveDeck((prevActiveDeck) => {\n    //   const shuffledDeck = [...prevActiveDeck];\n    //   for (let i = shuffledDeck.length - 1; i > 0; i--) {\n    //     const j = Math.floor(Math.random() * (i + 1));\n    //     [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]];\n    //   }\n    //   return shuffledDeck;\n    // });\n  }, [currentScore]);\n\n  // effect hook for when the level state changes: set the state numOfCards to a higher number depending on the level\n  useEffect(() => {\n    const cardsContainer = document.querySelector('.cards-container');\n    let numOfColumns = 5;\n    switch (level) {\n      case 1:\n        setNumOfCards(5);\n        break;\n      case 2:\n        setNumOfCards(8);\n        numOfColumns = 4;\n        break;\n      case 3:\n        setNumOfCards(10);\n        numOfColumns = 5;\n        break;\n      case 4:\n        setNumOfCards(14);\n        numOfColumns = 7;\n        break;\n      default:\n        setNumOfCards(0);\n        return;\n    }\n    cardsContainer.style.gridTemplateColumns = `repeat(${numOfColumns}, 1fr)`;\n  }, [level]);\n\n  const handleNewGameClickEvent = () => {\n    setGameOver(false);\n    updateBestScore();\n    resetCurrentScore();\n    resetAllClickedCards(characters);\n    setDiscardDeck([]);\n    setLevel(1);\n  };\n\n  const RenderGameOver = () => {\n    return (\n      <div className=\"game-over-container\">\n        <GameOver handleNewGameClickEvent={handleNewGameClickEvent} />\n      </div>\n    );\n  };\n\n  const RenderCards = () => {\n    return (\n      <div className=\"cards-container\">\n        {activeDeck.map((card) => (\n          <Card\n            card={card}\n            key={uniqid()}\n            incrementCurrentScore={incrementCurrentScore}\n            setGameOver={setGameOver}\n            setLevel={setLevel}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-wrapper\">\n      {gameOver ? RenderGameOver() : RenderCards()}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport Nav from './components/Nav';\nimport Scoreboard from './components/Scoreboard';\nimport Main from './components/Main';\nimport './css/App.css';\n\nconst App = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const incrementCurrentScore = () => {\n    setCurrentScore((prevScore) => prevScore + 1);\n  };\n\n  const resetCurrentScore = () => {\n    setCurrentScore(0)\n  };\n\n  const updateBestScore = () => {\n    setBestScore(currentScore);\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Scoreboard currentScore={currentScore} bestScore={bestScore} />\n      <Main\n        currentScore={currentScore}\n        incrementCurrentScore={incrementCurrentScore}\n        resetCurrentScore={resetCurrentScore}\n        updateBestScore={updateBestScore}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}